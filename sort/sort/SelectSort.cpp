#include <iostream>
using namespace std;
extern void print(int* a,int n, int i);
extern void swap(int* a, int *b);

//extern void SelectSort(int*a, int n);
/*=========================================
//第0趟排序1 2 9 3 0 8 4 7 3 6 
//第1趟排序0 2 9 3 1 8 4 7 3 6 
//第2趟排序0 1 9 3 2 8 4 7 3 6 
//第3趟排序0 1 2 3 9 8 4 7 3 6 
//第4趟排序0 1 2 3 9 8 4 7 3 6 
//第5趟排序0 1 2 3 3 8 4 7 9 6 
//第6趟排序0 1 2 3 3 4 8 7 9 6 
//第7趟排序0 1 2 3 3 4 6 7 9 8 
//第8趟排序0 1 2 3 3 4 6 7 9 8 
//第9趟排序0 1 2 3 3 4 6 7 8 9 
/*==========================================*/
/*==================================================
//功能：	
//描述：	查找到最小数的下标
//参数：	int* a 数组起始地址；
//			int n;数组总长度；
//			int i 要开始查找的起始下标
//返回值：	最小数的下标
/*==================================================*/
int SelectMinKey(int* a,int n,int i)
{
	int j = i;
	for(int k=i+1; k<n; k++)
	{
		if(a[k] < a[j])
		{
			j = k;
		}
	}
	return j;
}

/*==================================================
//功能：	选择排序	
//描述：	依次选取最小/大数放到查找的起始位置
//参数：	int* a 数组起始地址；
//			int n;数组总长度；
//返回值：
/*==================================================*/
void SelectSort(int* a, int n)
{
	int t;
	for(int i=0; i<n-1; i++)
	{
		t = SelectMinKey(a,n,i);
		if(t != i)
		{
			swap(&a[i], &a[t]);
		}
		print(a,n,i);
	}
}
